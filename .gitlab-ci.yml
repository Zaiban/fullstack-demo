variables:
  REMOTE_HOST: deploy@172.16.6.6
  #REMOTE_HOST: deploy@esa-fullstack-demo0
  REMOTE_DIR: fullstack-demo

stages:
  #- test
  - build
  - deploy


build_backend:
  image: node:22-slim
  stage: build
  cache:
    key: cache-backend-$CI_COMMIT_REF_SLUG
    paths:
      - backend/.npm
      - backend/node_modules
  artifacts:
    paths:
      - backend
  script:
    - cd backend
    - npm i

build_frontend:
  image: node:22-slim
  stage: build
  cache:
    key: cache-frontend-$CI_COMMIT_REF_SLUG
    paths:
      - frontend/.npm
      - frontend/node_modules
  artifacts:
    paths:
      - frontend/build/
  script:
    - cd frontend
    - npm i
    - npm run build

deploy:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  dependencies:
    - build_backend
    - build_frontend
  script:
    - export BACKEND_IMAGE="${CI_REGISTRY_IMAGE}/backend"
    - export FRONTEND_IMAGE="${CI_REGISTRY_IMAGE}/frontend"
    - apk update && apk add rsync openssh
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    # Prepare SSH settings
    - mkdir -p ~/.ssh && (umask  077 ; echo "${DEPLOY_KEY_PRIVATE}" | base64 -d > ~/.ssh/id_rsa)
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    # Build containers
    - docker build --no-cache -f backend/DockerfileServer -t "${BACKEND_IMAGE}" .
    - docker build --no-cache -f frontend/DockerfileServer -t "${FRONTEND_IMAGE}" .
    # Push to remote
    - docker push "${BACKEND_IMAGE}"
    - docker push "${FRONTEND_IMAGE}"
    # Prepare files for transfer
    - mkdir "${REMOTE_DIR}"
    - cp docker-compose.prod.yml "${REMOTE_DIR}/docker-compose.yml"
    # Setup env
    - echo "BACKEND_IMAGE=${BACKEND_IMAGE}" >> "${REMOTE_DIR}/.env"
    - echo "FRONTEND_IMAGE=${FRONTEND_IMAGE}" >> "${REMOTE_DIR}/.env"
    - echo "MONGO_URI=${MONGO_URI}" >> "${REMOTE_DIR}/.env"
    # Copy files to server
    - rsync -r "${REMOTE_DIR}" "${REMOTE_HOST}:./"
    # Run container-setup.sh to set up Docker environment on the remote server
    - ssh ${REMOTE_HOST} /bin/bash "
        echo ${REMOTE_DIR};
        cd ~/$REMOTE_DIR;
        docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY;
        docker-compose pull;
        docker-compose up -d;
      "
